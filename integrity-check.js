/**
 * SADE - Verificador de Integridade
 * Testa se todos os componentes est√£o funcionando corretamente
 */

console.log('üîç SADE - Iniciando verifica√ß√£o de integridade...');

// Verificar se os dados foram carregados
setTimeout(() => {
    console.log('üìä Verificando dados...');
    
    if (typeof SADE_DATA !== 'undefined') {
        console.log('‚úÖ SADE_DATA carregado:', Object.keys(SADE_DATA));
    } else {
        console.error('‚ùå SADE_DATA n√£o encontrado');
    }
    
    if (typeof sadeData !== 'undefined') {
        console.log('‚úÖ sadeData transformado:', Object.keys(sadeData));
        if (sadeData.proea) {
            const proeaSchools = Object.keys(sadeData.proea);
            console.log(`‚úÖ PROEA: ${proeaSchools.length} escolas encontradas:`, proeaSchools);
        }
        if (sadeData.cnca) {
            const cncaSchools = Object.keys(sadeData.cnca);
            console.log(`‚úÖ CNCA: ${cncaSchools.length} escolas encontradas:`, cncaSchools);
        }
    } else {
        console.error('‚ùå sadeData n√£o encontrado');
    }
    
    // Verificar se as fun√ß√µes de transforma√ß√£o existem
    if (typeof flattenSchoolData === 'function') {
        console.log('‚úÖ Fun√ß√£o flattenSchoolData dispon√≠vel');
    } else {
        console.error('‚ùå Fun√ß√£o flattenSchoolData n√£o encontrada');
    }
    
    // Verificar se o CONFIG est√° carregado
    if (typeof CONFIG !== 'undefined') {
        console.log('‚úÖ CONFIG carregado:', CONFIG.APP_VERSION);
    } else {
        console.error('‚ùå CONFIG n√£o encontrado');
    }
    
    console.log('üéâ Verifica√ß√£o de integridade conclu√≠da!');
}, 1000);

// Exportar fun√ß√£o de verifica√ß√£o
window.checkIntegrity = function() {
    console.log('üîç Executando verifica√ß√£o manual...');
    
    const checks = {
        sadeData: typeof SADE_DATA !== 'undefined',
        transformedData: typeof sadeData !== 'undefined',
        flattenFunction: typeof flattenSchoolData === 'function',
        config: typeof CONFIG !== 'undefined',
        bootstrap: typeof bootstrap !== 'undefined',
        jquery: typeof $ !== 'undefined'
    };
    
    console.table(checks);
    
    const passed = Object.values(checks).filter(Boolean).length;
    const total = Object.keys(checks).length;
    
    console.log(`üìä Resultado: ${passed}/${total} verifica√ß√µes passaram`);
    
    return checks;
};
